(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{370:function(e,t,a){"use strict";a.r(t);var s=a(43),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"vue2的响应式系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue2的响应式系统"}},[e._v("#")]),e._v(" vue2的响应式系统")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("   vue2的响应式系统基于观察者模式实现，是一种变体。核心概念：observer、dep、watcher。\n   基本原理：对一个对象的属性进行getter/setter改造，通过getter收集依赖deps，当属性值变化触发setter，setter通知依赖deps，deps触发观察者，观察者响应的触发对应回调函数。\n")])])]),a("h2",{attrs:{id:"observer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#observer"}},[e._v("#")]),e._v(" Observer")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("负责对被观察对象进行改造，增加getter/setter流程。getter负责收集依赖。\n")])])]),a("h2",{attrs:{id:"依赖dep"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#依赖dep"}},[e._v("#")]),e._v(" 依赖Dep")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("dep依赖，负责通知订阅者。\n")])])]),a("h2",{attrs:{id:"观察者watcher"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#观察者watcher"}},[e._v("#")]),e._v(" 观察者Watcher")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("观察者负责触发getter，收集和管理依赖。当主题改变，则触发对应回调函数进行响应。")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);